apiVersion: v1
kind: Template
metadata:
  name: sources-api
objects:
- apiVersion: v1
  kind: Secret # For ephemeral/local environment
  metadata:
    name: sources-api-secrets
    labels:
      app: sources-api
  stringData:
    encryption-key: "${ENCRYPTION_KEY}"
    secret-key: "${SECRET_KEY}"
    psks: "thisMustBeEphemeralOrMinikube"
- apiVersion: v1
  kind: Secret # For ephemeral/local environment
  metadata:
    name: internal-psk
    labels:
      app: sources-api
  stringData:
    psk: "thisMustBeEphemeralOrMinikube"
- apiVersion: v1
  kind: Secret # For ephemeral/local environment
  metadata:
    name: sources-psk
    labels:
      app: sources-api
  stringData:
    psk: "thisMustBeEphemeralOrMinikube"
- apiVersion: v1
  data:
    rules.json: |
      {
        "sources": [
          "index", "show"
        ],
        "endpoints": [
          "index", "show"
        ],
        "applications": [
          "index", "show"
        ],
        "source_types": [
          "index", "show"
        ],
        "application_types": [
          "index", "show"
        ],
        "rhc_connections": [
          "index", "show", "create", "edit", "destroy"
        ],
        "root": [
          "openapi"
        ]
      }
  kind: ConfigMap
  metadata:
    name: sources-proxy-rules
    labels:
      app: sources-api
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: sources-api
  spec:
    envName: ${ENV_NAME}
    testing:
      iqePlugin: sources
    deployments:
    - name: sidekiq
      minReplicas: ${{SIDEKIQ_REPLICAS}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        args:
        - run_sidekiq
        env:
        - name: APP_NAME
          value: ${APP_NAME}
        - name: DB_POOL_SIZE
          value: ${SIDEKIQ_DB_POOL_SIZE}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: CONTAINER_LOG_LEVEL
          value: ${CONTAINER_LOG_LEVEL}
          # TODO: It never can be blank!
        - name: CLOUD_METER_AVAILABILITY_CHECK_URL
          value: ${CLOUD_METER_SOURCES_API_SCHEME}://${CLOUD_METER_API_HOST}:${CLOUD_METER_SOURCES_API_PORT}${CLOUD_METER_SOURCES_API_AVAILABILITY_CHECK_PATH}
          # TODO: It never can be blank!
        - name: COST_MANAGEMENT_AVAILABILITY_CHECK_URL
          value: ${KOKU_SOURCES_API_SCHEME}://${KOKU_SOURCES_API_HOST}:${KOKU_SOURCES_API_PORT}${KOKU_SOURCES_API_APP_CHECK_PATH}
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: sources-api-secrets
              key: encryption-key
        - name: PATH_PREFIX
          value: ${PATH_PREFIX}
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: sources-api-secrets
              key: secret-key
        resources:
          limits:
            cpu: ${SIDEKIQ_CPU_LIMIT}
            memory: ${SIDEKIQ_MEMORY_LIMIT}
          requests:
            cpu: ${SIDEKIQ_CPU_REQUEST}
            memory: ${SIDEKIQ_MEMORY_REQUEST}
        readinessProbe:
          tcpSocket:
            port: 7433
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            port: 7433
          initialDelaySeconds: 10
    - name: svc
      minReplicas: ${{MIN_REPLICAS}}
      webServices:
        public:
          enabled: true # port 8000 is default in ClowdEnvironment
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        initContainers:
        - command:
          - entrypoint
          args:
          - seed_database
          inheritEnv: false
          env:
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: sources-api-secrets
                key: encryption-key
          - name: SECRET_KEY_BASE
            valueFrom:
              secretKeyRef:
                name: sources-api-secrets
                key: secret-key
          - name: SOURCES_ENV
            value: ${SOURCES_ENV}
          - name: SKIP_SEEDING
            value: ${SKIP_SEEDING}
        env:
        - name: APP_NAME
          value: ${APP_NAME}
        - name: DB_POOL_SIZE
          value: ${DB_POOL_SIZE}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: CONTAINER_LOG_LEVEL
          value: ${CONTAINER_LOG_LEVEL}
        - name: CLOUD_METER_AVAILABILITY_CHECK_URL
          value: ${CLOUD_METER_API_SCHEME}://${CLOUD_METER_API_HOST}:${CLOUD_METER_SOURCES_API_PORT}${CLOUD_METER_SOURCES_API_AVAILABILITY_CHECK_PATH}
        - name: COST_MANAGEMENT_AVAILABILITY_CHECK_URL
          value: ${KOKU_SOURCES_API_SCHEME}://${KOKU_SOURCES_API_HOST}:${KOKU_SOURCES_API_PORT}${KOKU_SOURCES_API_APP_CHECK_PATH}
        - name: PROXY_REQUESTS
          value: ${PROXY_REQUESTS}
        - name: GO_SVC
          value: ${GO_SVC}
        - name: GO_PORT
          value: ${GO_PORT}
        - name: PROXY_GRAPHQL
          value: ${PROXY_GRAPHQL}
        - name: SOURCES_PSKS
          valueFrom:
            secretKeyRef:
              name: sources-api-secrets
              key: psks
              optional: true
        - name: DISABLE_AVAILABILITY_STATUS_LISTENER
          value: ${DISABLE_AVAILABILITY_STATUS_LISTENER}
        - name: DISABLE_ORG_ADMIN
          value: ${DISABLE_ORG_ADMIN}
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: sources-api-secrets
              key: encryption-key
        - name: PATH_PREFIX
          value: ${PATH_PREFIX}
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: sources-api-secrets
              key: secret-key
        - name: BYPASS_RBAC
          value: ${BYPASS_RBAC}
        - name: RBAC_URL
          value: ${RBAC_SCHEME}://${RBAC_HOST}:${RBAC_PORT}
        volumeMounts:
        - name: proxy-rules
          mountPath: /opt/sources-api/proxy_rules/
          readOnly: true
        volumes:
        - name: proxy-rules
          configMap:
            name: sources-proxy-rules
            items:
            - key: rules.json
              path: rules.json
        readinessProbe:
          tcpSocket:
            port: 8000
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 120
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
    database:
      name: sources # looking for rds: sources-db resource in app-interface
      version: 12
    kafkaTopics:
    - topicName: platform.sources.event-stream
      partitions: 3
      replicas: 3
    - topicName: platform.sources.status
      partitions: 3
      replicas: 3
    - topicName: platform.sources.superkey-requests
      partitions: 3
      replicas: 3
    - topicName: platform.topological-inventory.operations-amazon
      partitions: 3
      replicas: 3
    - topicName: platform.topological-inventory.operations-ansible-tower
      partitions: 3
      replicas: 3
    - topicName: platform.topological-inventory.operations-azure
      partitions: 3
      replicas: 3
    - topicName: platform.topological-inventory.operations-google
      partitions: 3
      replicas: 3
    - topicName: platform.topological-inventory.operations-openshift
      partitions: 3
      replicas: 3
    - topicName: platform.topological-inventory.operations-satellite
      partitions: 3
      replicas: 3
    inMemoryDb: true
    optionalDependencies:
    - rbac

parameters:
- description: Application name to be used in request paths.
  displayName: Application Name
  name: APP_NAME
  value: sources
- description: Scheme of the Cloud Meter API
  displayName: Cloud Meter API Scheme
  name: CLOUD_METER_API_SCHEME
  value: http
- description: Hostname of the Cloud Meter API
  displayName: Cloud Meter API Hostname
  name: CLOUD_METER_API_HOST
  required: true
  value: cloudigrade-api
- name: CLOUD_METER_SOURCES_API_PORT
  value: '8000'
- name: CLOUD_METER_SOURCES_API_AVAILABILITY_CHECK_PATH
  value: /internal/api/cloudigrade/v1/availability_status
- name: CPU_LIMIT
  value: 500m
- name: CPU_REQUEST
  value: 100m
- name: DB_POOL_SIZE
  displayName: Database Pool size
  description: Database pool configuration in DATABASE_URL env
  value: "5"
- name: SIDEKIQ_DB_POOL_SIZE
  displayName: Database Pool size
  description: Database pool configuration in sidekiq DATABASE_URL env
  value: "20"
- name: ENCRYPTION_KEY
  displayName: Encryption Key (Ephemeral)
  required: true
  description: Encryption Key for Passwords
  from: "[a-zA-Z0-9]{43}"
  generate: expression
- description: Clowder ENV
  name: ENV_NAME
  required: true
- description: Image
  name: IMAGE
  value: quay.io/cloudservices/sources-api
- description: Image tag
  name: IMAGE_TAG
  required: true
- name: KOKU_SOURCES_API_SCHEME
  value: http
- description: Hostname of the koku sources API server
  displayName: Koku Sources API Hostname
  name: KOKU_SOURCES_API_HOST
  required: true
  value: koku-sources
- name: KOKU_SOURCES_API_PORT
  value: '8000'
- name: KOKU_SOURCES_API_APP_CHECK_PATH
  value: /api/cost-management/v1/source-status/
- name: LOG_LEVEL
  value: WARN
- name: CONTAINER_LOG_LEVEL
  value: INFO
- name: MEMORY_LIMIT
  value: 1Gi
- name: MEMORY_REQUEST
  value: 500Mi
- description: Prometheus Metrics Port
  displayName: Metrics Port
  name: METRICS_PORT
  value: '9000' # default in ClowdEnvironment CRD
- description: The number of replicas to use for the prometheus deploy
  name: MIN_REPLICAS
  value: '1'
- description: Base path for the API
  displayName: Path Prefix
  name: PATH_PREFIX
  value: api
- description: 'Options can be found in the doc: https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-SSLMODE-STATEMENTS'
  displayName: Postgres SSL mode
  name: PGSSLMODE
  value: prefer
- description: Host to use for the RBAC service URL.
  displayName: Rbac Service Host
  name: RBAC_HOST
  value: rbac-service
- description: Port to use for the RBAC service URL.
  displayName: Rbac Service Port
  name: RBAC_PORT
  required: true
  value: '8000'
- description: Scheme to use for the RBAC service URL. Can be either http or https
  displayName: Rbac Service Scheme
  name: RBAC_SCHEME
  required: true
  value: http
- description: Skip the RBAC service entirely. All the identified requests will be assumed to be valid.
  displayName: Bypass RBAC option enabled
  name: BYPASS_RBAC
  value: "false"
- name: SECRET_KEY
  displayName: Secret Key (Ephemeral)
  required: true
  description: Rails SECRET_KEY_BASE
  from: "[a-f0-9]{128}"
  generate: expression
- description: Env name for seed
  name: SOURCES_ENV
  required: true
  value: stage
- name: SIDEKIQ_CPU_LIMIT
  value: 200m
- name: SIDEKIQ_CPU_REQUEST
  value: 50m
- name: SIDEKIQ_MEMORY_LIMIT
  value: 500Mi
- name: SIDEKIQ_MEMORY_REQUEST
  value: 100Mi
- name: SIDEKIQ_REPLICAS
  value: '1'
- name: DISABLE_ORG_ADMIN
  description: when set to true this disables the org_admin check in the x-rh-identity.
  value: "false"
- name: DISABLE_AVAILABILITY_STATUS_LISTENER
  value: "false"
- name: PROXY_REQUESTS
  description: Proxy requests from configmap to the new go-rewrite svc
  value: "false"
- name: GO_SVC
  description: hostname of the go-rewrite svc
  value: sources-api-go-svc
- name: GO_PORT
  description: port of the go-rewrite svc
  value: "8000"
- name: SKIP_SEEDING
  description: skip the rake db:seed step since it is handled by the Go rewrite now
  value: "false"
- name: PROXY_GRAPHQL
  value: "false"
